#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 6.11 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 28 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 60 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 10 #"Monospace\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 0 1 #"\0"
0 75 10 #"Monospace\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 150 0 150 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 175 0 0
0 -1 -1           0 710 0 17 3 13 #"; MIT License"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 17 3 32 #"; Copyright (c) 2017 Vincent Nys"
0 0 24 29 1 #"\n"
0 0 17 3 2 #"; "
0 0 24 29 1 #"\n"
0 0 17 3 78
(
 #"; Permission is hereby granted, free of charge, to any person obtain"
 #"ing a copy"
) 0 0 24 29 1 #"\n"
0 0 17 3 79
(
 #"; of this software and associated documentation files (the \"Softwar"
 #"e\"), to deal"
) 0 0 24 29 1 #"\n"
0 0 17 3 78
(
 #"; in the Software without restriction, including without limitation "
 #"the rights"
) 0 0 24 29 1 #"\n"
0 0 17 3 75
(
 #"; to use, copy, modify, merge, publish, distribute, sublicense, and/"
 #"or sell"
) 0 0 24 29 1 #"\n"
0 0 17 3 71
(
 #"; copies of the Software, and to permit persons to whom the Software"
 #" is"
) 0 0 24 29 1 #"\n"
0 0 17 3 58
#"; furnished to do so, subject to the following conditions:"
0 0 24 29 1 #"\n"
0 0 17 3 2 #"; "
0 0 24 29 1 #"\n"
0 0 17 3 80
(
 #"; The above copyright notice and this permission notice shall be inc"
 #"luded in all"
) 0 0 24 29 1 #"\n"
0 0 17 3 49 #"; copies or substantial portions of the Software."
0 0 24 29 1 #"\n"
0 0 17 3 2 #"; "
0 0 24 29 1 #"\n"
0 0 17 3 76
(
 #"; THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, "
 #"EXPRESS OR"
) 0 0 24 29 1 #"\n"
0 0 17 3 74
(
 #"; IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTAB"
 #"ILITY,"
) 0 0 24 29 1 #"\n"
0 0 17 3 77
(
 #"; FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT "
 #"SHALL THE"
) 0 0 24 29 1 #"\n"
0 0 17 3 72
(
 #"; AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR O"
 #"THER"
) 0 0 24 29 1 #"\n"
0 0 17 3 79
(
 #"; LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, AR"
 #"ISING FROM,"
) 0 0 24 29 1 #"\n"
0 0 17 3 79
(
 #"; OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEAL"
 #"INGS IN THE"
) 0 0 24 29 1 #"\n"
0 0 17 3 11 #"; SOFTWARE."
0 0 24 29 1 #"\n"
0 0 28 3 19 #"#lang at-exp racket"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 14 3 13 #"racket/struct"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 14 3 15 #"scribble/srcdoc"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 14 3 29 #"cclp-analysis/concrete-domain"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 14 3 32 #"cclp-analysis/concrete-knowledge"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 7 #"only-in"
0 0 24 3 1 #" "
0 0 14 3 13 #"cclp-analysis"
0 0 14 3 17 #"/domain-switching"
0 0 24 3 1 #" "
0 0 14 3 11 #"cons-symbol"
0 0 24 3 1 #" "
0 0 14 3 12 #"concrete-nil"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 2 #" ("
0 0 14 3 7 #"for-doc"
0 0 24 3 1 #" "
0 0 14 3 15 #"scribble/manual"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"struct"
0 0 24 3 1 #" "
0 0 14 3 17 #"concrete-equality"
0 0 24 3 2 #" ("
0 0 14 3 5 #"term1"
0 0 24 3 1 #" "
0 0 14 3 5 #"term2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 23 3 9 #"#:methods"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 14 3 14 #"gen:equal+hash"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"  [("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"equal-proc"
0 0 24 3 1 #" "
0 0 14 3 3 #"ce1"
0 0 24 3 1 #" "
0 0 14 3 3 #"ce2"
0 0 24 3 1 #" "
0 0 14 3 12 #"equal?-recur"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 3 #"and"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 12 #"equal?-recur"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 23 #"concrete-equality-term1"
0 0 24 3 1 #" "
0 0 14 3 3 #"ce1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 23 #"concrete-equality-term1"
0 0 24 3 1 #" "
0 0 14 3 3 #"ce2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 12 #"equal?-recur"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 23 #"concrete-equality-term2"
0 0 24 3 1 #" "
0 0 14 3 3 #"ce1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 23 #"concrete-equality-term2"
0 0 24 3 1 #" "
0 0 14 3 3 #"ce2"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"hash-proc"
0 0 24 3 1 #" "
0 0 14 3 2 #"ce"
0 0 24 3 1 #" "
0 0 14 3 10 #"hash-recur"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #" ("
0 0 14 3 10 #"hash-recur"
0 0 24 3 2 #" ("
0 0 14 3 23 #"concrete-equality-term1"
0 0 24 3 1 #" "
0 0 14 3 2 #"ce"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 2 #" ("
0 0 14 3 10 #"hash-recur"
0 0 24 3 2 #" ("
0 0 14 3 23 #"concrete-equality-term2"
0 0 24 3 1 #" "
0 0 14 3 2 #"ce"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"hash2-proc"
0 0 24 3 1 #" "
0 0 14 3 2 #"ce"
0 0 24 3 1 #" "
0 0 14 3 11 #"hash2-recur"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 11 #"hash2-recur"
0 0 24 3 2 #" ("
0 0 14 3 23 #"concrete-equality-term1"
0 0 24 3 1 #" "
0 0 14 3 2 #"ce"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 11 #"hash2-recur"
0 0 24 3 2 #" ("
0 0 14 3 23 #"concrete-equality-term2"
0 0 24 3 1 #" "
0 0 14 3 2 #"ce"
0 0 24 3 5 #"))))]"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 23 3 9 #"#:methods"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 14 3 16 #"gen:custom-write"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"  [("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"write-proc"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 30 #"make-constructor-style-printer"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 3 #"obj"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 17 #"concrete-equality"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 3 #"obj"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 23 #"concrete-equality-term1"
0 0 24 3 1 #" "
0 0 14 3 3 #"obj"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 23 #"concrete-equality-term2"
0 0 24 3 1 #" "
0 0 14 3 3 #"obj"
0 0 24 3 7 #")))))])"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 7 #"provide"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 11 #"struct*-doc"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 14 3 17 #"concrete-equality"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"  (["
0 0 14 3 5 #"term1"
0 0 24 3 2 #" ("
0 0 14 3 4 #"or/c"
0 0 24 3 1 #" "
0 0 14 3 21 #"concrete-domain-elem?"
0 0 24 3 2 #" ("
0 0 14 3 6 #"listof"
0 0 24 3 1 #" "
0 0 14 3 21 #"concrete-domain-elem?"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 14 3 5 #"term2"
0 0 24 3 2 #" ("
0 0 14 3 4 #"or/c"
0 0 24 3 1 #" "
0 0 14 3 21 #"concrete-domain-elem?"
0 0 24 3 2 #" ("
0 0 14 3 6 #"listof"
0 0 24 3 1 #" "
0 0 14 3 21 #"concrete-domain-elem?"
0 0 24 3 4 #"))])"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"  @{"
0 0 20 3 66
#"An equality between two concrete domain elements. A list of these "
0 0 20 3 33 #"makes up a concrete substitution."
0 0 24 3 3 #"}))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"substitute"
0 0 24 3 1 #" "
0 0 14 3 11 #"substitutee"
0 0 24 3 1 #" "
0 0 14 3 11 #"substituter"
0 0 24 3 1 #" "
0 0 14 3 4 #"ctxt"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 15 3 3 #"rec"
0 0 24 3 2 #" ("
0 0 14 3 5 #"curry"
0 0 24 3 1 #" "
0 0 14 3 10 #"substitute"
0 0 24 3 1 #" "
0 0 14 3 11 #"substitutee"
0 0 24 3 1 #" "
0 0 14 3 11 #"substituter"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"match"
0 0 24 3 1 #" "
0 0 14 3 4 #"ctxt"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"variable"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 23 3 6 #"#:when"
0 0 24 3 2 #" ("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 2 #" ("
0 0 14 3 13 #"variable-name"
0 0 24 3 1 #" "
0 0 14 3 11 #"substitutee"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 14 3 11 #"substituter"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"function"
0 0 24 3 1 #" "
0 0 14 3 3 #"sym"
0 0 24 3 1 #" "
0 0 14 3 4 #"args"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 8 #"function"
0 0 24 3 1 #" "
0 0 14 3 3 #"sym"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 3 1 #" "
0 0 15 3 3 #"rec"
0 0 24 3 1 #" "
0 0 14 3 4 #"args"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 4 #"atom"
0 0 24 3 1 #" "
0 0 14 3 3 #"sym"
0 0 24 3 1 #" "
0 0 14 3 4 #"args"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 4 #"atom"
0 0 24 3 1 #" "
0 0 14 3 3 #"sym"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 3 1 #" "
0 0 15 3 3 #"rec"
0 0 24 3 1 #" "
0 0 14 3 4 #"args"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 1 #"?"
0 0 24 3 1 #" "
0 0 14 3 5 #"list?"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 3 #"map"
0 0 24 3 1 #" "
0 0 15 3 3 #"rec"
0 0 24 3 1 #" "
0 0 14 3 4 #"ctxt"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 17 #"concrete-equality"
0 0 24 3 1 #" "
0 0 14 3 2 #"t1"
0 0 24 3 1 #" "
0 0 14 3 2 #"t2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 17 #"concrete-equality"
0 0 24 3 2 #" ("
0 0 15 3 3 #"rec"
0 0 24 3 1 #" "
0 0 14 3 2 #"t1"
0 0 24 3 3 #") ("
0 0 15 3 3 #"rec"
0 0 24 3 1 #" "
0 0 14 3 2 #"t2"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 14 3 4 #"ctxt"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 7 #"provide"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 14 #"proc-doc/names"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 14 3 10 #"substitute"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 9 #"variable?"
0 0 24 3 1 #" "
0 0 14 3 5 #"term?"
0 0 24 3 2 #" ("
0 0 14 3 4 #"or/c"
0 0 24 3 1 #" "
0 0 14 3 5 #"term?"
0 0 24 3 1 #" "
0 0 14 3 5 #"atom?"
0 0 24 3 1 #" "
0 0 14 3 5 #"list?"
0 0 24 3 1 #" "
0 0 14 3 18 #"concrete-equality?"
0 0 24 3 3 #") ("
0 0 14 3 4 #"or/c"
0 0 24 3 1 #" "
0 0 14 3 5 #"term?"
0 0 24 3 1 #" "
0 0 14 3 5 #"atom?"
0 0 24 3 1 #" "
0 0 14 3 5 #"list?"
0 0 24 3 1 #" "
0 0 14 3 18 #"concrete-equality?"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"substitutee"
0 0 24 3 1 #" "
0 0 14 3 11 #"substituter"
0 0 24 3 1 #" "
0 0 14 3 4 #"ctxt"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"  @{"
0 0 20 3 8 #"Replace "
0 0 24 3 1 #"@"
0 0 14 3 6 #"racket"
0 0 24 3 1 #"["
0 0 14 3 11 #"substitutee"
0 0 24 3 1 #"]"
0 0 20 3 6 #" with "
0 0 24 3 1 #"@"
0 0 14 3 6 #"racket"
0 0 24 3 1 #"["
0 0 14 3 11 #"substituter"
0 0 24 3 1 #"]"
0 0 20 3 8 #" inside "
0 0 24 3 1 #"@"
0 0 14 3 6 #"racket"
0 0 24 3 1 #"["
0 0 14 3 4 #"ctxt"
0 0 24 3 1 #"]"
0 0 20 3 1 #"."
0 0 24 3 3 #"}))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 27 #"apply-variable-substitution"
0 0 24 3 1 #" "
0 0 14 3 5 #"subst"
0 0 24 3 1 #" "
0 0 14 3 4 #"ctxt"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"match"
0 0 24 3 1 #" "
0 0 14 3 5 #"subst"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 4 #"list"
0 0 24 3 2 #") "
0 0 14 3 4 #"ctxt"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 9 #"list-rest"
0 0 24 3 1 #" "
0 0 14 3 2 #"sh"
0 0 24 3 1 #" "
0 0 14 3 2 #"st"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (["
0 0 15 3 3 #"rec"
0 0 24 3 2 #" ("
0 0 14 3 5 #"curry"
0 0 24 3 1 #" "
0 0 14 3 27 #"apply-variable-substitution"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 2 #"sh"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ["
0 0 14 3 8 #"after-sh"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 15 3 5 #"match"
0 0 24 3 1 #" "
0 0 14 3 4 #"ctxt"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"               [("
0 0 14 3 8 #"variable"
0 0 24 3 1 #" "
0 0 14 3 2 #"vn"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 23 3 6 #"#:when"
0 0 24 3 2 #" ("
0 0 14 3 3 #"eq?"
0 0 24 3 1 #" "
0 0 14 3 2 #"vn"
0 0 24 3 2 #" ("
0 0 14 3 13 #"variable-name"
0 0 24 3 2 #" ("
0 0 14 3 23 #"concrete-equality-term1"
0 0 24 3 1 #" "
0 0 14 3 2 #"sh"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 23 #"concrete-equality-term2"
0 0 24 3 1 #" "
0 0 14 3 2 #"sh"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"               [("
0 0 14 3 8 #"variable"
0 0 24 3 1 #" "
0 0 14 3 2 #"vn"
0 0 24 3 3 #") ("
0 0 14 3 8 #"variable"
0 0 24 3 1 #" "
0 0 14 3 2 #"vn"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"               [("
0 0 14 3 4 #"atom"
0 0 24 3 1 #" "
0 0 14 3 3 #"sym"
0 0 24 3 1 #" "
0 0 14 3 4 #"args"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 4 #"atom"
0 0 24 3 1 #" "
0 0 14 3 3 #"sym"
0 0 24 3 2 #" ("
0 0 15 3 3 #"rec"
0 0 24 3 1 #" "
0 0 14 3 4 #"args"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"               [("
0 0 14 3 8 #"function"
0 0 24 3 1 #" "
0 0 14 3 3 #"sym"
0 0 24 3 1 #" "
0 0 14 3 4 #"args"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 8 #"function"
0 0 24 3 1 #" "
0 0 14 3 3 #"sym"
0 0 24 3 2 #" ("
0 0 15 3 3 #"rec"
0 0 24 3 1 #" "
0 0 14 3 4 #"args"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"               [("
0 0 14 3 1 #"?"
0 0 24 3 1 #" "
0 0 14 3 5 #"list?"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 3 #"map"
0 0 24 3 1 #" "
0 0 15 3 3 #"rec"
0 0 24 3 1 #" "
0 0 14 3 4 #"ctxt"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"               [("
0 0 14 3 4 #"rule"
0 0 24 3 1 #" "
0 0 14 3 1 #"h"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #" "
0 0 14 3 3 #"idx"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 4 #"rule"
0 0 24 3 2 #" ("
0 0 15 3 3 #"rec"
0 0 24 3 1 #" "
0 0 14 3 1 #"h"
0 0 24 3 3 #") ("
0 0 15 3 3 #"rec"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 2 #") "
0 0 14 3 3 #"idx"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"               [("
0 0 14 3 17 #"concrete-equality"
0 0 24 3 1 #" "
0 0 14 3 2 #"t1"
0 0 24 3 1 #" "
0 0 14 3 2 #"t2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 17 #"concrete-equality"
0 0 24 3 2 #" ("
0 0 15 3 3 #"rec"
0 0 24 3 1 #" "
0 0 14 3 2 #"t1"
0 0 24 3 3 #") ("
0 0 15 3 3 #"rec"
0 0 24 3 1 #" "
0 0 14 3 2 #"t2"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"               [("
0 0 14 3 14 #"concrete-multi"
0 0 24 3 1 #" "
0 0 14 3 3 #"lst"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 14 #"concrete-multi"
0 0 24 3 2 #" ("
0 0 15 3 3 #"rec"
0 0 24 3 1 #" "
0 0 14 3 3 #"lst"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 19 3 47 #"\"Don't know how to substitute in this context.\""
0 0 24 3 5 #")])])"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 27 #"apply-variable-substitution"
0 0 24 3 1 #" "
0 0 14 3 2 #"st"
0 0 24 3 1 #" "
0 0 14 3 8 #"after-sh"
0 0 24 3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 7 #"provide"
0 0 24 3 1 #" "
0 0 14 3 27 #"apply-variable-substitution"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 87
(
 #";; TODO: restore this once \316\261 and \316\263 lang extension work"
 #"s, this is just a pain to write"
) 0 0 24 29 1 #"\n"
0 9        4369 28           0 0           0 727 0 24 3 1 #"("
0 0 15 3 7 #"module+"
0 0 24 3 1 #" "
0 0 14 3 4 #"test"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 8 #"rackunit"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 27 #"apply-variable-substitution"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 17 #"concrete-equality"
0 0 24 3 2 #" ("
0 0 14 3 8 #"variable"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"G30"
0 0 24 3 3 #") ("
0 0 14 3 8 #"variable"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"Var155"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 17 #"concrete-equality"
0 0 24 3 2 #" ("
0 0 14 3 8 #"variable"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"A47"
0 0 24 3 3 #") ("
0 0 14 3 8 #"function"
0 0 24 3 1 #" "
0 0 14 3 11 #"cons-symbol"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 8 #"variable"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"Var155"
0 0 24 3 3 #") ("
0 0 14 3 8 #"variable"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"Var156"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 17 #"concrete-equality"
0 0 24 3 2 #" ("
0 0 14 3 8 #"variable"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"Var158"
0 0 24 3 3 #") ("
0 0 14 3 8 #"function"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"|2|"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 17 #"concrete-equality"
0 0 24 3 2 #" ("
0 0 14 3 8 #"variable"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"Var155"
0 0 24 3 3 #") ("
0 0 14 3 8 #"variable"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"Var159"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 17 #"concrete-equality"
0 0 24 3 2 #" ("
0 0 14 3 8 #"variable"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"Var156"
0 0 24 3 3 #") ("
0 0 14 3 8 #"variable"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"Var160"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 17 #"concrete-equality"
0 0 24 3 2 #" ("
0 0 14 3 8 #"variable"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"A51"
0 0 24 3 3 #") ("
0 0 14 3 8 #"function"
0 0 24 3 1 #" "
0 0 14 3 11 #"cons-symbol"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 8 #"variable"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"Var159"
0 0 24 3 3 #") ("
0 0 14 3 8 #"variable"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"Var161"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 17 #"concrete-equality"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 8 #"variable"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"Tail1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 8 #"function"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 14 3 11 #"cons-symbol"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 8 #"function"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 21 3 1 #"'"
0 0 14 3 14 #"building_block"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 8 #"function"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 14 3 11 #"cons-symbol"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 8 #"function"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 21 3 1 #"'"
0 0 14 3 6 #"filter"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 8 #"variable"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"G1i33"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 8 #"variable"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"A1i51"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 8 #"variable"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"A1i55"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 14 3 12 #"concrete-nil"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 8 #"variable"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"Var162"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 17 #"concrete-equality"
0 0 24 3 2 #" ("
0 0 14 3 8 #"variable"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"G1i33"
0 0 24 3 3 #") ("
0 0 14 3 8 #"variable"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"Var163"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 17 #"concrete-equality"
0 0 24 3 2 #" ("
0 0 14 3 8 #"variable"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"A1i51"
0 0 24 3 3 #") ("
0 0 14 3 8 #"function"
0 0 24 3 1 #" "
0 0 14 3 11 #"cons-symbol"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 8 #"variable"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"Var164"
0 0 24 3 3 #") ("
0 0 14 3 8 #"variable"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"Var165"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 17 #"concrete-equality"
0 0 24 3 2 #" ("
0 0 14 3 8 #"variable"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"A1i55"
0 0 24 3 3 #") ("
0 0 14 3 8 #"function"
0 0 24 3 1 #" "
0 0 14 3 11 #"cons-symbol"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 8 #"variable"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"Var164"
0 0 24 3 3 #") ("
0 0 14 3 8 #"variable"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"Var166"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 17 #"concrete-equality"
0 0 24 3 2 #" ("
0 0 14 3 8 #"variable"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"Var162"
0 0 24 3 2 #") "
0 0 14 3 12 #"concrete-nil"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 17 #"concrete-equality"
0 0 24 3 2 #" ("
0 0 14 3 8 #"variable"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"Var163"
0 0 24 3 3 #") ("
0 0 14 3 8 #"variable"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"Var167"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 17 #"concrete-equality"
0 0 24 3 2 #" ("
0 0 14 3 8 #"variable"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"Var164"
0 0 24 3 3 #") ("
0 0 14 3 8 #"variable"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"Var168"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 17 #"concrete-equality"
0 0 24 3 2 #" ("
0 0 14 3 8 #"variable"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"Var165"
0 0 24 3 3 #") ("
0 0 14 3 8 #"variable"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"Var169"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 17 #"concrete-equality"
0 0 24 3 2 #" ("
0 0 14 3 8 #"variable"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"Var170"
0 0 24 3 3 #") ("
0 0 14 3 8 #"function"
0 0 24 3 1 #" "
0 0 14 3 11 #"cons-symbol"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 8 #"variable"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"Var168"
0 0 24 3 3 #") ("
0 0 14 3 8 #"variable"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"Var166"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 4 #"atom"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"q57"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 8 #"function"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 8 #"integers"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 8 #"variable"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"G30"
0 0 24 3 3 #") ("
0 0 14 3 8 #"variable"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"A47"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 8 #"function"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"filter"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 8 #"function"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"|2|"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 3 #") ("
0 0 14 3 8 #"variable"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"A47"
0 0 24 3 3 #") ("
0 0 14 3 8 #"variable"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"A51"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 8 #"function"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 21 3 1 #"'"
0 0 14 3 5 #"multi"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 8 #"function"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 14 3 11 #"cons-symbol"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 8 #"function"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 21 3 1 #"'"
0 0 14 3 14 #"building_block"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 8 #"function"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 14 3 11 #"cons-symbol"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 8 #"function"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"filter"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 8 #"variable"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"G1i33"
0 0 24 3 3 #") ("
0 0 14 3 8 #"variable"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"A1i51"
0 0 24 3 3 #") ("
0 0 14 3 8 #"variable"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"A1i55"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                   "
0 0 14 3 12 #"concrete-nil"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 8 #"variable"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"Tail1"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 8 #"function"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"filter"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 8 #"variable"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"G36"
0 0 24 3 3 #") ("
0 0 14 3 8 #"variable"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"A58"
0 0 24 3 3 #") ("
0 0 14 3 8 #"variable"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"A60"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 8 #"function"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"sift"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 8 #"variable"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"A60"
0 0 24 3 3 #") ("
0 0 14 3 8 #"variable"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"A62"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 8 #"function"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"length"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 8 #"variable"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"A62"
0 0 24 3 3 #") ("
0 0 14 3 8 #"variable"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"G39"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 4 #"atom"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"q57"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 8 #"function"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 8 #"integers"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 8 #"variable"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"Var155"
0 0 24 3 3 #") ("
0 0 14 3 8 #"variable"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"A47"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 8 #"function"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"filter"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 8 #"function"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"|2|"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 3 #") ("
0 0 14 3 8 #"variable"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"A47"
0 0 24 3 3 #") ("
0 0 14 3 8 #"variable"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"A51"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 8 #"function"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 21 3 1 #"'"
0 0 14 3 5 #"multi"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 8 #"function"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 14 3 11 #"cons-symbol"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 8 #"function"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 21 3 1 #"'"
0 0 14 3 14 #"building_block"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 8 #"function"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                 "
0 0 14 3 11 #"cons-symbol"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 8 #"function"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"filter"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 8 #"variable"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"G1i33"
0 0 24 3 3 #") ("
0 0 14 3 8 #"variable"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"A1i51"
0 0 24 3 3 #") ("
0 0 14 3 8 #"variable"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"A1i55"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 14 3 12 #"concrete-nil"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 8 #"variable"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"Tail1"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 8 #"function"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"filter"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 8 #"variable"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"G36"
0 0 24 3 3 #") ("
0 0 14 3 8 #"variable"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"A58"
0 0 24 3 3 #") ("
0 0 14 3 8 #"variable"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"A60"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 8 #"function"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"sift"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 8 #"variable"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"A60"
0 0 24 3 3 #") ("
0 0 14 3 8 #"variable"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"A62"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 8 #"function"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"length"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 8 #"variable"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"A62"
0 0 24 3 3 #") ("
0 0 14 3 8 #"variable"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"G39"
0 0 24 3 7 #")))))))"
0           0 0           0
